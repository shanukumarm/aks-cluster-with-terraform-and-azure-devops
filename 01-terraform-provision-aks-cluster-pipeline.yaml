trigger:
- main

variables:
  - name: AGENT_POOL_NAME
    value:  'local-azure-devops-agent'
    readonly: true
  - name: DEV_ENVIRONMENT
    value: 'dev'
  - name: QA_ENVIRONMENT
    value: 'qa'


pool:
  name: $(AGENT_POOL_NAME)

stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:
          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/terraform-code'
              artifact: 'terraform-manifests-out'
              publishLocation: 'pipeline'
          - task: TerraformInstaller@1
            displayName: Terraform Install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              commandOptions: '-reconfigure'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
              backendServiceArm: 'Free Trial(4d909174-d9a2-424b-adc9-f78c9dcefb96)'
              backendAzureRmResourceGroupName: 'terraform-storage-for-tfstate'
              backendAzureRmStorageAccountName: 'tfstateremotebackup'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'aks-azure-devops.tfstate'
          - task: TerraformTaskV4@4
            displayName: Terraform Validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'

  # Deploy cluster to Dev and QA environment
  - stage: DeployAKSCluster
    jobs:
      # Deploy cluster to dev
      - deployment: DeployDevAKSCluster
        displayName: Deploy Dev AKS Cluster
        # pool:
        #  name: $(AGENT_POOL_NAME)
        environment: $(DEV_ENVIRONMENT)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadSecureFile@1
                  displayName: Download SSH Key
                  name: sshkey
                  inputs:
                    secureFile: 'aksprodsshkey.pub'
                - task: TerraformTaskV4@4
                  displayName: Terraform init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    commandOptions: '-reconfigure'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    backendServiceArm: 'Free Trial(4d909174-d9a2-424b-adc9-f78c9dcefb96)'
                    backendAzureRmResourceGroupName: 'terraform-storage-for-tfstate'
                    backendAzureRmStorageAccountName: 'tfstateremotebackup'
                    backendAzureRmContainerName: 'tfstatefiles'
                    backendAzureRmKey: 'aks-azure-devops-$(DEV_ENVIRONMENT).tfstate'
                - task: TerraformTaskV4@4
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath) -var environment=$(DEV_ENVIRONMENT) -out $(Pipeline.Workspace)/terraform-manifests-out/$(DEV_ENVIRONMENT)-$(Build.BuildId).out'
                    environmentServiceNameAzureRM: 'Free Trial(4d909174-d9a2-424b-adc9-f78c9dcefb96)'
                - task: TerraformTaskV4@4
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    commandOptions: '$(Pipeline.Workspace)/terraform-manifests-out/$(DEV_ENVIRONMENT)-$(Build.BuildId).out'
                    environmentServiceNameAzureRM: 'terraform-aks-azurerm-svc-con'
      
      # Deploy Cluster to QA
      - deployment: DeployQAAKSCluster
        displayName: Deploy QA AKS Cluster
        dependsOn: DeployDevAKSCluster
        # pool:
        #  name: $(AGENT_POOL_NAME)
        environment: $(QA_ENVIRONMENT)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadSecureFile@1
                  displayName: Download SSH Key
                  name: sshkey
                  inputs:
                    secureFile: 'aksprodsshkey.pub'
                - task: TerraformTaskV4@4
                  displayName: Terraform init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    commandOptions: '-reconfigure'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    backendServiceArm: 'Free Trial(4d909174-d9a2-424b-adc9-f78c9dcefb96)'
                    backendAzureRmResourceGroupName: 'terraform-storage-for-tfstate'
                    backendAzureRmStorageAccountName: 'tfstateremotebackup'
                    backendAzureRmContainerName: 'tfstatefiles'
                    backendAzureRmKey: 'aks-azure-devops-$(QA_ENVIRONMENT).tfstate'
                - task: TerraformTaskV4@4
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath) -var environment=$(QA_ENVIRONMENT) -out $(Pipeline.Workspace)/terraform-manifests-out/$(QA_ENVIRONMENT)-$(Build.BuildId).out'
                    environmentServiceNameAzureRM: 'Free Trial(4d909174-d9a2-424b-adc9-f78c9dcefb96)'
                - task: TerraformTaskV4@4
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-code'
                    commandOptions: '$(Pipeline.Workspace)/terraform-manifests-out/$(QA_ENVIRONMENT)-$(Build.BuildId).out'
                    environmentServiceNameAzureRM: 'terraform-aks-azurerm-svc-con'